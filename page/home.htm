<style>
.home ol{margin:0;padding:0;list-style:none;box-sizing:border-box}
.home li{box-sizing:border-box}
.home .status{display:flex;padding:0;color:#fff}
.home .status ol,
.home .status li{display:flex}
.home .status span{padding:0 .3em}
.home table input[type=text]{font-size:.8em}
.home table .play button{flex:auto}
.home table th button{min-height:100%}
.home table th button span{padding:0 .4em}
.home table td button{min-height:100%;width:100%}
.home table td .run,
.home table td .idle,
.home table td .stop,
.home table td .blank{display:flex;align-items:center;justify-content:center;height:100%;text-align:center;color:#fff}
.home .order-dlg{height:20%}
.home .order-dlg span:last-child{text-align:left}
.home .rside{position:fixed;top:0;right:0;bottom:0;width:20em;background:#fff}
.home .rside:empty{display:none}
</style>
<div class="home">
	<div class="status">
		<ol v-for="{name,run,idle} in status">
			<li>
				<span class="name"><i :class="name"></i></span>
				<span class="run">작동중 {{run}}</span>
				<span class="idle">미사용 {{idle}}</span>
				<button @click="orderShow(name)">신규</button>
			</li>
		</ol>
	</div>
	<form v-on:submit.prevent="submitSearch">
		<input>
		<button type="submit">검색</button>
		<label><input name="state" type="radio" value="" v-model="state">전체</label>
		<label><input name="state" type="radio" value="-run-" v-model="state">사용</label>
		<label><input name="state" type="radio" value="-idle-" v-model="state">미사용</label>
		<label><input name="state" type="radio" value="-fin-" v-model="state">만료</label>
	</form>
	<table class="tbl1"><colgroup>
		<col class="num">
		<col class="memo">
		<col class="stat">
		<col class="name">
		<col class="url">
		<col class="kwd">
		<col class="rnk">
		<col class="begin">
		<col class="end">
		<col class="id">
		<col class="top">
		<col class="ept">
	</colgroup><thead>
		<tr>
			<th class="num">
				<label class="chk"><input type="checkbox" v-model="all" @click="chkall"></label>
			</th>
			<th class="stat">
				<div class="btns play">
					<button @click="play"><i class="svg-play"></i></button>
					<button @click="stop"><i class="svg-stop"></i></button>
				</div>
			</th>
			<th class="memo"><button @click="ticketUpdate"><span>연장신청</span></button>&nbsp;메모</th>
			<th class="name">현황</th>
			<th class="url">URL</th>
			<th class="kwd">키워드</th>
			<th class="rnk">랭크(시작 / 현재)</th>
			<th class="begin">시작</th>
			<th class="end">종료</th>
			<th class="id">아이디</th>
			<th class="top">그룹</th>
			<th class="ept"></th>
		</tr>
	</thead><tbody>
		<tr v-for="a in blankList()">
			<td class="no">
				<label class="chk"><input type="checkbox" v-model="a.chk" :disabled="!a.id"></label>
			</td>
			<td>
				<span class="idle" v-if="a.id&&!a.timein&&!a.timeout">미사용</span>
				<span class="stop" v-if="a.id&&a.state==0">정지됨</span>
				<span class="run" v-if="a.id&&a.state==100">작동중</span>
				<span class="blank" v-if="!a.id||(a.timein&&a.timein==a.timeout)"></span>
			</td>
			<td><input type="text" v-model="a.note" :placeholder="a.note2" :disabled="!a.id"></td>
			<td><i :class="a.name"></i></td>
			<td><input type="text" v-model="a.url" :placeholder="a.url2" :disabled="!a.id"></td>
			<td><input type="text" v-model="a.txt" :placeholder="a.txt2" :disabled="!a.id"></td>
			<td><button @click="rankOpen(a)" :disabled="!a.id">{{a.rankin}} / {{a.rankout}}</button></td>
			<td class="txt8">{{a.timein}}</td>
			<td class="txt8" :class="{alert:a.alert}">{{a.timeout}}</td>
			<td><i :class="'tier-'+a.tier"></i><br>{{a.id}}</td>
			<td>
				<div class="top">
					<span v-for="b in a.top"><i :class="`tier-${b.tier}`"></i><br>{{b.id}}</span>
				</div>
			</td>
			<td></td>
		</tr>
	</tbody></table>
	<div class="pagelst1">
		<button @click="pagemv(-10)" :disabled="page<=1"><i class="svg-l"></i></button>
		<template v-for="{text,active} in pagelist()">
			<input type="number" min="1" :max="total" v-if="text==page" v-model="page" @keydown.enter="reload()">
			<button name="idx" v-else :value="text" :disabled="!active" @click="pagenav(text)">{{text}}</button>
		</template>
		<button @click="pagemv(10)" :disabled="page>=total"><i class="svg-r"></i></button>
	</div>
	<dialog class="dlg1 order-dlg" open v-if="orderDialog[0]=='ORDER'">
		<div>
			<p><i :class="orderDialog[1]"></i> 요청 수량을 입력해주세요.</p>
			<input type="number" min="0" value="0" v-model="orderDialog[2]">
		</div>
		<form method="dialog" v-on:submit.prevent="order">
			<button @click="orderDialog=''">취소</button>
			<button>확인</button>
		</form>
	</dialog>
	<dialog class="dlg1 order-dlg" open v-if="orderDialog[0]=='WAIT'">
		<div>
			<p>
				<i :class="orderDialog[1]"></i>
				&nbsp;{{orderDialog[2]}}개&nbsp;
				<span v-if="orderDialog[3]==0">요청중 ..</span>
				<span v-if="orderDialog[3]==1">요청이 완료되었습니다.</span>
			</p>
		</div>
		<form method="dialog">
			<button @click="orderDialog[0]=''">확인</button>
		</form>
	</dialog>
	<dialog class="dlg1 update-dlg" open v-if="updateDialog[0]=='WAIT'">
		<div>
			<p>
				<i :class="updateDialog[1]"></i>
				&nbsp;{{updateDialog[2]}}개&nbsp;
				<span v-if="updateDialog[3]==0">요청중 ..</span>
				<span v-if="updateDialog[3]==1">연장신청 되었습니다.</span>
			</p>
		</div>
		<form method="dialog">
			<button @click="updateDialog[0]=''">확인</button>
		</form>
	</dialog>
	<div class="rside" ref="rside"></div>
</div>
<script type="module">
import {local,signal,ref} from '/env.mjs'

const app=local.app
const search=ref("")
const total=ref(1)
const page=ref(1)
const pageidx=ref(1)
const list=ref([])
const listsize=ref(20)
const state=ref("")
const all=ref(false)
const status=ref([
	{name:"cs0-30-120",run:0,idle:0},
	{name:"cs0-5-40",run:0,idle:0}
])
const orderDialog=ref([])
const updateDialog=ref([])
const rside=ref(null)

signal.get("home")({
	setup(){
		return {search,total,page,state,all,status,list,listsize,orderDialog,updateDialog,rside}
	},
	methods:{
		async reload(){
			var lst=[],{state:a,page:b,rows}=await app.xpost("/tickets",{page:page.value,size:listsize.value,state:state.value})

			for(var st of status.value){
				var tmp=a[st.name]
				if(tmp){
					st.run=tmp[0]
					st.idle=tmp[1]
				}
			}

			for(var [num,state2,name,job,txt2,rank,time,note2,line] of rows){
				var data={
					chk:false,url:"",txt:"",note:"",
					num,state:state2,name,url2:this.job(job),txt2,...this.parseRank(rank),...this.parseDay(time),note2,
					top:[]
				}
				var proc=(id,tier)=>{
					data.id=id
					data.tier=tier
					proc=(id,tier)=>{
						data.top.push({id,tier})
					}
				}
				for(var tmp of line.split("\n")){
					proc(...tmp.split("\t"))
				}
				lst.push(data)
			}

			total.value=b
			list.value=lst
		},
		async order(name){
			var [_,name,count]=orderDialog.value

			if(count<=0){
				orderDialog.value=[]
				return
			}

			orderDialog.value[0]="WAIT"

			var {code,result}=await app.xpost("/tickets/order",{name,count})
			if(code==200){
				orderDialog.value[3]=1
			}
		},
		async orderShow(name){
			orderDialog.value=["ORDER",name,0,0]
		},
		async submitSearch(e){
			this.reload()
		},
		async pagenav(i){
			page.value=i
			this.reload()
		},
		async rankOpen(row){
			var frm=await app.load(rside.value,"rank","rank","/dlg/rank.htm")
			frm.id=row.num
			frm.today()
			frm.reload()
		},
		async pagemv(i){
			var idx=pageidx.value+i
			if(idx<0){
				pageidx.value=1
			}else if(idx<total.value){
				pageidx.value=idx
			}
		},
		async play(){
			var data=[]

			for(var {chk,num,url,txt,note} of list.value){
				if(chk){
					data.push([num,url,txt,note])
				}
			}

			await app.xpost("/tickets/start",{data})
			await this.reload()
		},
		async stop(){
			var data=[]

			for(var {chk,num} of list.value){
				if(chk){
					data.push(num)
				}
			}

			await app.xpost("/tickets/stop",{data})
			await this.reload()
		},
		async ticketUpdate(){
			var data=[]

			for(var {chk,num} of list.value){
				if(chk){
					data.push(num)
				}
			}

			await app.xpost("/tickets/date/request",{data})
		},
		chkall(){
			var val=!all.value
			for(var a of list.value){
				a.chk=val
			}
		},
		*pagelist(){
			var last=total.value
			for(var i=pageidx.value,size=i+10;i<size;i++){
				yield {text:i,active:(i<=last)}
			}
		},
		job(a){
			var b=a.split("\t")
			switch(b[0]){
			case "cs0":if(b[1])return `https://www.coupang.com/vp/products/${b[1]}`+this.param("itemId",b[2],"vendorItemId",b[3])
			case "ns0":if(b[1])return ``
			}
		},
		parseRank(a){
			var b=a.split("\t")
			return {rankin:b[0],rankout:b[1]}
		},
		parseDay(a){
			var b=a.split("\t")
			return {online:b[0],timein:b[1],timeout:b[2],alert:+b[3]}
		},
		param(...a){
			var b="",c="?"
			for(var i=0;i<a.length;i+=2){
				b+=c
				b+=a[i]
				b+="="
				b+=a[i+1]
				c="&"
			}
			return b
		},
		*blankList(){
			var size=listsize.value
			for(var row of list.value){
				yield row
				size--
			}
			for(;size>0;size--){
				yield {}
			}
		}
	},
	mounted(){
		this.reload()
	}
})
</script>